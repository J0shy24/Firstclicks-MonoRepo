name: Firstclicks backend API pipeline

on:
  push:
    branches:
      - ci/pipeline
    paths:
      - firstclicks-server/**
      - docker/backend/**
      - 'docker-compose.yaml'
      - .github/workflows/*-backend.yml

jobs:
  compile:
    runs-on: self-hosted
    name: Compile Project
    steps: 
      - name: Checkout code
        uses: actions/checkout@v4
        with: 
          fetch-depth: 0

      - name: Setupd JDK
        uses: actions/setup-jdk@v4
        with: 
          java-version: 17
          distribution: 'corretto'

      - name: Compile project
        run: |
          cd firstclicks-server
          ./mvnw clean compile

  unit-tests:
    runs-on: self-hosted
    name: Unit tests
    steps: 
      - name: Checkout code
        uses: actions/checkout@v4
        with: 
          fetch-depth: 0

      - name: Setupd JDK
        uses: actions/setup-jdk@v4
        with: 
          java-version: 17
          distribution: 'corretto'

      - name: Unit tests
        run: |
          cd firstclicks-server
          ./mvnw clean test

  build:
    runs-on: self-hosted
    name: Build backend
    needs [compile, unit-tests]
    steps: 
      - name: Checkout code
        uses: actions/checkout@v4
        with: 
          fetch-depth: 0

      - name: Setupd JDK
        uses: actions/setup-jdk@v4
        with: 
          java-version: 17
          distribution: 'corretto'

      - name: Build Project
        run: |
          cd firstclicks-server
          ./mvnw clean package

  build-image:
    name: Build Docker Image
    needs: [build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with: 
          fetch-depth: 0

      - name: Setupd JDK
        uses: actions/setup-jdk@v4
        with: 
          java-version: 17
          distribution: 'corretto'

      - name: Extract Project version
        id: extract_version
          cd firstclicks-server
          echo "VERSION=$(./mvnw -q -Dexec.executable='echo' -Dexec.args='${project.version}' --non-recursive exec:exec)" >> $GITHUB_OUTPUT

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push to DockerHub
        uses: docker/build-push-actions@v5
        with:
          context: firstclicks-server
          file: docker/backend/Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ secrets.DOCKERHUB_USERNAME}}/firstclicks-api:${{ steps.extract_version.outputs.VERSION }},${{ secrets.DOCKERHUB_USERNAME }}/firstclicks-api:latest
          build-args: |
            APP_VERSION=${{steps.extract_version.outputs.VERSION}}

  deploy:
    name: Deploy Backend
    runs-on: self-hosted
    needs: [build-image]
    steps:
      - name: Create deployment Folder
        run: ssh ${{secrets.VPS_USERNAME}}@${{secrets.VPS_IP}} "mkdir -p ci-cd"

      - name: Copy docker-compose file
        run: scp -oStrictHostKeyChecking=no docker-compose.yml ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_IP }}:ci-cd/docker-compose.yml

      - name: Set ENV variable and deploy
        run: |
          ssh ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_IP }} <<EOF
          cd ci-cd
          docker compose -f docker-compose.yml pull -q
          docker compose -f docker-compose.yml up -d
          EOF